# .github/workflows/deploy.yml
name: Deploy API to Raspberry Pi

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy_to_server:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PI_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.PI_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "echo 'SSH connection successful'; whoami; pwd"

      - name: Deploy Files
        run: |
          # Create directories and backup .env
          ssh ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "
            # Create directories
            mkdir -p ~/api/french-citizenship-api/data
            mkdir -p ~/api/french-citizenship-api/logs
          
            # Backup .env file if it exists
            if [ -f ~/api/french-citizenship-api/.env ]; then
              /bin/cp ~/api/french-citizenship-api/.env ~/api/.env.backup
              echo '.env file backed up'
            else
              echo 'ERROR: .env file not found at ~/api/french-citizenship-api/.env'
              echo 'Please create the .env file first before deploying'
              exit 1
            fi
          "
          
          # Copy files using rsync (without --delete to preserve .env)
          rsync -avz \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ \
            ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }}:~/api/french-citizenship-api/
          
          # Restore .env file
          ssh ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "
            # Restore .env file
            /bin/cp ~/api/.env.backup ~/api/french-citizenship-api/.env
            rm ~/api/.env.backup
            echo '.env file restored'
            ls -la ~/api/french-citizenship-api/.env
          "

      - name: Deploy with Docker
        run: |
          ssh ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "
            cd ~/api/french-citizenship-api
          
            # Deploy with Docker Compose
            docker compose down || true
            docker rmi french-citizenship-api_api || true
            docker compose up -d --build
          
            # Show status
            echo '=== Container Status ==='
            docker compose ps
          
            echo '=== API Logs ==='
            docker compose logs --tail=20 api
          
            # Health check
            echo 'Waiting for API to start...'
            sleep 20
          
            if ! docker compose ps | grep -q 'Up'; then
              echo 'ERROR: API container is not running'
              docker compose ps
              docker compose logs api
              exit 1
            fi
          
            if curl -f http://localhost:8043/health > /dev/null 2>&1; then
              echo 'API health check: PASSED'
              echo 'API deployment successful!'
            else
              echo 'API health check: FAILED'
              docker compose logs api
              exit 1
            fi
          "

      - name: Cleanup
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa